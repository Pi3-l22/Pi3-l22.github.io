<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据结构 on Pi3's Notes</title><link>https://blog.pi3.fun/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><description>Recent content in 数据结构 on Pi3's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>622.511.liuchao@gmail.com (LiuChao)</managingEditor><webMaster>622.511.liuchao@gmail.com (LiuChao)</webMaster><lastBuildDate>Wed, 26 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pi3.fun/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml"/><item><title>Go语言实现跳表</title><link>https://blog.pi3.fun/post/2025/03/go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E8%B7%B3%E8%A1%A8/</link><pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate><author>622.511.liuchao@gmail.com (LiuChao)</author><guid>https://blog.pi3.fun/post/2025/03/go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E8%B7%B3%E8%A1%A8/</guid><description>&lt;p>跳表是一种经典的以空间换时间的数据结构。对于普通的链表来说，由于只能使用顺序查找，因此查找的时间复杂度就为 &lt;code>O(n)&lt;/code>，而跳表有多条并联链表，因此可以实现 &lt;code>O(logn)&lt;/code> 的时间复杂度，类似于二分查找的链表版本。其空间复杂度为 &lt;code>O(n)&lt;/code>。&lt;/p></description></item></channel></rss>