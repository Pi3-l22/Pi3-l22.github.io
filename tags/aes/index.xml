<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AES on Pi3's Notes</title><link>https://blog.pi3.fun/tags/aes/</link><description>Recent content in AES on Pi3's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>622.511.liuchao@gmail.com (LiuChao)</managingEditor><webMaster>622.511.liuchao@gmail.com (LiuChao)</webMaster><lastBuildDate>Sat, 24 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pi3.fun/tags/aes/index.xml" rel="self" type="application/rss+xml"/><item><title>AES-128算法的量子电路实现</title><link>https://blog.pi3.fun/post/2025/05/aes-128-quantum-implementation/</link><pubDate>Sat, 24 May 2025 00:00:00 +0000</pubDate><author>622.511.liuchao@gmail.com (LiuChao)</author><guid>https://blog.pi3.fun/post/2025/05/aes-128-quantum-implementation/</guid><description>&lt;p>使用 Python 对 AES-128 的量子电路实现进行模拟，量子电路实现与经典实现的不同之处在于，其量子电路使用的是量子门，而非经典实现中的运算门，同时其核心在于比特级运算，这对于以字为运算单位的 AES 算法来说，实现起来并不简单。&lt;/p></description></item><item><title>AES-128算法的经典实现</title><link>https://blog.pi3.fun/post/2025/05/aes-128-classic-implementation/</link><pubDate>Sat, 17 May 2025 00:00:00 +0000</pubDate><author>622.511.liuchao@gmail.com (LiuChao)</author><guid>https://blog.pi3.fun/post/2025/05/aes-128-classic-implementation/</guid><description>&lt;p>使用 Python 对 AES-128 密码算法加解密流程进行经典实现，所谓经典就是使用普通计算机和编程语言将算法流程实现。算法采用 ECB 模式，即将明文/密文分为16个字节一组（不足的0填充），每组分别独立进行AES加解密，最后拼接在一起。&lt;/p></description></item></channel></rss>